// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace Chat {

  #region Enums
  /// <summary>
  ///定义聊天频道
  /// </summary>
  public enum chat_channel {
    ChatTypeNull = 0,
    /// <summary>
    ///私聊
    /// </summary>
    ChatTypePrivate = 1,
    /// <summary>
    ///房间聊天
    /// </summary>
    ChatTypeRoom = 2,
    /// <summary>
    ///公会聊天
    /// </summary>
    ChatTypeGuild = 3,
    /// <summary>
    ///组队聊天
    /// </summary>
    ChatTypeTeam = 4,
    /// <summary>
    ///同服务器聊天
    /// </summary>
    ChatTypeArea = 5,
    /// <summary>
    ///世界聊天
    /// </summary>
    ChatTypeWorld = 6,
  }

  #endregion

  #region Messages
  /// <summary>
  ///聊天推送消息
  /// </summary>
  public sealed class push_chat : pb::IMessage {
    private static readonly pb::MessageParser<push_chat> _parser = new pb::MessageParser<push_chat>(() => new push_chat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<push_chat> Parser { get { return _parser; } }

    /// <summary>Field number for the "from_uid" field.</summary>
    public const int FromUidFieldNumber = 1;
    private ulong fromUid_;
    /// <summary>
    ///发起者uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUid {
      get { return fromUid_; }
      set {
        fromUid_ = value;
      }
    }

    /// <summary>Field number for the "from_name" field.</summary>
    public const int FromNameFieldNumber = 2;
    private string fromName_ = "";
    /// <summary>
    ///发起者名字	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromName {
      get { return fromName_; }
      set {
        fromName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 3;
    private string content_ = "";
    /// <summary>
    ///聊天内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 4;
    private global::Chat.chat_channel channel_ = 0;
    /// <summary>
    ///聊天频道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chat.chat_channel Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUid);
      }
      if (FromName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FromName);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Content);
      }
      if (Channel != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Channel);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUid);
      }
      if (FromName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromName);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (Channel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Channel);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            FromUid = input.ReadUInt64();
            break;
          }
          case 18: {
            FromName = input.ReadString();
            break;
          }
          case 26: {
            Content = input.ReadString();
            break;
          }
          case 32: {
            channel_ = (global::Chat.chat_channel) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///客户端发送聊天消息
  /// </summary>
  public sealed class req_chat : pb::IMessage {
    private static readonly pb::MessageParser<req_chat> _parser = new pb::MessageParser<req_chat>(() => new req_chat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<req_chat> Parser { get { return _parser; } }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 1;
    private string content_ = "";
    /// <summary>
    ///聊天内容	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 2;
    private global::Chat.chat_channel channel_ = 0;
    /// <summary>
    ///聊天频道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chat.chat_channel Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 3;
    private ulong target_;
    /// <summary>
    ///目标的uid，私聊时才有
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Content.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Content);
      }
      if (Channel != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Channel);
      }
      if (Target != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Target);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (Channel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Channel);
      }
      if (Target != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Target);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Content = input.ReadString();
            break;
          }
          case 16: {
            channel_ = (global::Chat.chat_channel) input.ReadEnum();
            break;
          }
          case 24: {
            Target = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
